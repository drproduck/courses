1.
a. digital certificate contains: a user's name along with the user's public key and these 2 information are then signed by a certificate authority
b. the certificate can contains anything else
c. Because the more information the more like it will become invalid

2.
a. Bob does not know anything about the sender before verifying it
b. Bob would use the CA's public key to revert the signed certificate. He then knows that he can trust that the sender has the private key corresponding to the public key in the signed message(as authorized by the CA). Of course he now also knows Alice's public key
c. After Bob verifies, he still doesnt know anything about the sender except that only the sender has the private key which fact has been vouched for by a trusted CA

5.
a. 19^3 = 28 (mod 33)
   28^7 = 19 (mod 33)
b. S = 25^7 = 31 (mod 33)
   Bob will use the public key to unsign S. If the result matches Alice's message then it is really Alice
   31^3 = 25 (mod 33)

7. 
a. The cube root attack is possible when M^3 < N and therefore M^3 mod N is not changed, we can simply take the cube root of C. To prevent cube root attack we can pad extra bits to the original message so that M^3 > N
b. 3^3 = 27 mod 33 and cube root of 27 is 3, the plaintext
   4^3 = 31 mod 33 and cube root of 31 is not 4.

8. 
a. In a separated file
b. f(1024) = 90
c. f(2048) = 121
d. 12707

11.
Let g = the PIN number. then Alice and Bob each choose a random number of his/her own. They also need to compute a common modulus N which is the order of a group generated by g and share it, but it needs not be secret. Alice sends g^a mod N, Bob sends g^b mod N. Their symmetric key will now be g^ab mod N. Since in Diffie Hellman g and N are public, the fact that g is small and can be bruteforced does not help

12. MAC does not provide non-repudiation because both users know it and can claim that the other fakes it. Whereas in public key crypto, only 1 user knows the private key

17. 
a.  6^-1 = 8 (mod 47)
    18*8 = 3 (mod 47)
	30*8 = 5 (mod 47)
	7*8 = 9 (mod 47)
	26*8 = 20 (mod 47)
=> private key = (3,5,9,20)
b. 18 + 30 + 26 = 74

18. solvable in linear time if the private key is superincreasing 
    How: sort he key in increasing order. going from right to left, pick the first key that is less than the sum. subtract that number from that sum. Repeat. since we iterate through the key looking at each number once, time = O(n)
	Proof:
Suppose for contradiction that at some time, we instead skip the next smaller number. However the sum of the rest of the numbers in the right hand side is less than the smaller number and thus less than the sum itself. Thus we will never reach the sum.

19. No. What Trudy knows are: g^a, g^b, g^(at), g^(bt) and t. To solve for g^ab she still needs to solve the discrete log with g^a and g^b, to solve for g^abt she again needs to solve the discrete log, because g^at and g^bt dont provide any shortcut 

23. 
a. yes. For once, everyone can read the ciphertext if it makes any sense. Second, m^e = m mod N and m^ed = m mod N implies that d-1 and e-1 are both multiples of the order of the group modulo N. We can use divisors of e as candidate for the smallest order, and then try multiples of that order for potential d.
 if order of m mod N is k, meaning m^k = 1 mod N and for all i<k, m^i != 1 mod N, then e-1 and d-1 is a multiple of k. 
 we cannot use e as key though. For example 2^4 = 2 mod 7 but 5^4 = 2 mod 7. The problem is the 4-1 = 3 is the order of 2 mod 7 but it is smaller than EulerPhi(7) = 6 which is the order of 5 mod 7

 b. 235

 26. 61552787537619 => Biggles
